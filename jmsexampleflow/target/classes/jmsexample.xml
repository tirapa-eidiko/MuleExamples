<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:jms="http://www.mulesoft.org/schema/mule/jms" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd">
    <jms:activemq-connector name="Active_MQ" brokerURL="tcp://localhost:61616" validateConnections="true" doc:name="Active MQ"/>
    <jms:activemq-connector name="Active_MQ1" brokerURL="tcp://localhost:61616" validateConnections="true" doc:name="Active MQ"/>
    <http:listener-config name="HTTP_Listener_Configuration" host="0.0.0.0" port="8081" doc:name="HTTP Listener Configuration"/>
    <db:oracle-config name="Oracle_Configuration" host="localhost" port="1521" instance="xe" user="system" password="sarasu10" doc:name="Oracle Configuration"/>
    <file:connector name="File" autoDelete="false" outputAppend="true" streaming="true" validateConnections="true" doc:name="File"/>
    <file:connector name="File1" autoDelete="false" streaming="true" validateConnections="true" doc:name="File"/>
   
    <flow name="jmsexampleFlow">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/mq" doc:name="HTTP"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-payload>
        </dw:transform-message>
        <set-variable variableName="length" value="#[payload.size()]" doc:name="Variable"/>
        <set-variable variableName="uuid" value="#[function:uuid]" doc:name="Variable"/>


        <foreach collection="#[payload]" doc:name="For Each">
            <dw:transform-message doc:name="Transform Message">
                <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	a:payload.a,
	b:payload.b,
	uuid:flowVars.uuid,
	sum:payload.a+payload.b,
	length:flowVars.length
}]]></dw:set-payload>
            </dw:transform-message>

            <jms:outbound-endpoint queue="sender" connector-ref="Active_MQ" doc:name="JMS" exchange-pattern="request-response">
                <jms:transaction action="NONE"/>
            </jms:outbound-endpoint>
        </foreach>
    </flow>
    <flow name="jmsexampleFlow1">
        <jms:inbound-endpoint  connector-ref="Active_MQ1" doc:name="JMS" queue="sender" exchange-pattern="request-response">
            <jms:transaction action="NONE"/>
        </jms:inbound-endpoint>
        <set-payload value="#[payload[0]]" doc:name="Set Payload"/>

        <byte-array-to-object-transformer doc:name="Byte Array to Object"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <set-variable variableName="recorddata" value="#[payload]" doc:name="Variable"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-variable variableName="daa"><![CDATA[%dw 1.0
%output application/java
---
{
	uuid:payload.uuid,
	length:payload.length
}]]></dw:set-variable>
        </dw:transform-message>
        <db:select config-ref="Oracle_Configuration" doc:name="Database">
            <db:parameterized-query><![CDATA[select * from mq1 where uuid=#[flowVars.daa.uuid]]]></db:parameterized-query>
        </db:select>
        <set-variable variableName="database" value="#[payload.size()]" doc:name="Variable"/>
        <choice doc:name="Choice">
            <when expression="#[flowVars.database!=flowVars.daa.length]">
                <set-variable variableName="count" value="#[payload.size()-flowVars.daa.length]" doc:name="Variable"/>
                <db:insert config-ref="Oracle_Configuration" doc:name="Database">
                    <db:parameterized-query><![CDATA[insert into mq1 values(#[flowVars.daa.uuid],#[flowVars.recorddata])]]></db:parameterized-query>
                </db:insert>
                <logger level="INFO" doc:name="Logger"/>
                <choice doc:name="Choice">
                    <when expression="#[(flowVars.database+1)==flowVars.daa.length]">
                        <db:select config-ref="Oracle_Configuration" doc:name="Database">
                            <db:parameterized-query><![CDATA[select * from mq1 where uuid=#[flowVars.daa.uuid]]]></db:parameterized-query>
                        </db:select>
                        <dw:transform-message doc:name="Transform Message">
                            <dw:set-payload><![CDATA[%dw 1.0
%output application/json 
---
payload.DATA ]]></dw:set-payload>
                        </dw:transform-message>

                        <file:outbound-endpoint path="C:\Users\db2admin.bandaru-PC\Videos\PGP" outputPattern="#[flowVars.daa.uuid]" connector-ref="File1" responseTimeout="10000" doc:name="File"/>
                    </when>
                    <otherwise>
                        <logger message="def" level="INFO" doc:name="Logger"/>
                    </otherwise>
                </choice>
            </when>
            <otherwise>
                <logger message="no records" level="INFO" doc:name="Logger"/>
            </otherwise>
        </choice>



    </flow>
</mule>
